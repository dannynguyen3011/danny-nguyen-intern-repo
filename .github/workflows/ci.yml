name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  markdown-lint:
    name: Markdown Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install markdownlint-cli
      run: npm install -g markdownlint-cli
      
    - name: Run Markdown Linting
      run: |
        # Create .markdownlint.json config if it doesn't exist
        if [ ! -f .markdownlint.json ]; then
          echo '{
            "MD013": false,
            "MD033": false,
            "MD041": false
          }' > .markdownlint.json
        fi
        markdownlint "**/*.md" --ignore node_modules --ignore .git

  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install cspell
      run: npm install -g cspell
      
    - name: Run Spell Check
      run: |
        # Create cspell.json config if it doesn't exist
        if [ ! -f cspell.json ]; then
          echo '{
            "version": "0.2",
            "language": "en",
            "words": [
              "github",
              "repo",
              "workflow",
              "markdownlint",
              "cspell",
              "danny",
              "nguyen",
              "cicd"
            ],
            "ignorePaths": [
              "node_modules/**",
              ".git/**",
              "*.log"
            ]
          }' > cspell.json
        fi
        cspell "**/*.md" "**/*.txt" --no-progress

  python-lint:
    name: Python Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install Python linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
        
    - name: Run Black formatter check
      run: |
        if ls *.py 1> /dev/null 2>&1; then
          black --check --diff *.py
        else
          echo "No Python files found to check"
        fi
        
    - name: Run Flake8 linting
      run: |
        if ls *.py 1> /dev/null 2>&1; then
          flake8 *.py --max-line-length=88 --extend-ignore=E203,W503
        else
          echo "No Python files found to lint"
        fi

  test-runner:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Run Python tests
      run: |
        if ls *.py 1> /dev/null 2>&1; then
          echo "Running Python tests..."
          for file in *.py; do
            if grep -q "if __name__ == \"__main__\"" "$file"; then
              echo "Testing $file"
              python "$file"
            fi
          done
        else
          echo "No Python test files found"
        fi
